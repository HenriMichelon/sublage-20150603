package sublage.project.properties;

import sublage.project.SublageProject;
import java.util.ArrayList;
import java.util.List;
import javax.swing.ComboBoxModel;
import javax.swing.event.ListDataListener;
import org.openide.filesystems.FileObject;

public class PanelDebugProperties extends javax.swing.JPanel {

    public class ComboSourcesModel implements ComboBoxModel<String> {

        private SublageProject project;
        private List<String> objects = new ArrayList<String>();

        public ComboSourcesModel(SublageProject project) {
            this.project = project;
            FileObject sourcesFolder = project.getProjectDirectory().getFileObject("sources");
            //TODO : sub dirs
            for (FileObject file : sourcesFolder.getChildren()) {
                if (file.getMIMEType().equals("text/x-sublagesource")
                        && (!file.getNameExt().endsWith(".library.source"))) {
                    objects.add(file.getNameExt());
                }
            }
        }

        @Override
        public void setSelectedItem(Object anItem) {
            if (anItem instanceof String) {
                project.setMainbinary((String)anItem);
            }
        }

        @Override
        public Object getSelectedItem() {
            return project.getMainbinary();
        }

        @Override
        public int getSize() {
            return objects.size();
        }

        @Override
        public String getElementAt(int index) {
            return objects.get(index);
        }

        @Override
        public void addListDataListener(ListDataListener l) {
        }

        @Override
        public void removeListDataListener(ListDataListener l) {
        }
    }
    private SublageProject project;

    public PanelDebugProperties(SublageProject project) {
        this.project = project;
        initComponents();
        jCheckBox1.setSelected(project.isDebugOn());
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jCheckBox1 = new javax.swing.JCheckBox();

        org.openide.awt.Mnemonics.setLocalizedText(jCheckBox1, org.openide.util.NbBundle.getMessage(PanelDebugProperties.class, "PanelDebugProperties.jCheckBox1.text")); // NOI18N
        jCheckBox1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckBox1ActionPerformed(evt);
            }
        });

        org.jdesktop.layout.GroupLayout layout = new org.jdesktop.layout.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(layout.createSequentialGroup()
                .add(jCheckBox1, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 500, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .add(0, 101, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(layout.createSequentialGroup()
                .add(jCheckBox1)
                .add(0, 277, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void jCheckBox1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBox1ActionPerformed
        project.setDebugOn(jCheckBox1.isSelected());
    }//GEN-LAST:event_jCheckBox1ActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JCheckBox jCheckBox1;
    // End of variables declaration//GEN-END:variables
}
