/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package sublage.project.properties;

import sublage.project.SublageProject;
import java.util.ArrayList;
import java.util.List;
import javax.swing.ComboBoxModel;
import javax.swing.JLabel;
import javax.swing.event.ListDataListener;
import org.openide.filesystems.FileObject;

public class PanelRunProperties extends javax.swing.JPanel {

    public class ComboSourcesModel implements ComboBoxModel<String> {

        private SublageProject project;
        private List<String> objects = new ArrayList<String>();

        public ComboSourcesModel(SublageProject project) {
            this.project = project;
            FileObject sourcesFolder = project.getProjectDirectory().getFileObject("sources");
            //TODO : sub dirs
            for (FileObject file : sourcesFolder.getChildren()) {
                if (file.getMIMEType().equals("text/x-sublagesource")
                        && (!file.getNameExt().endsWith(".library.source"))) {
                    objects.add(file.getNameExt());
                }
            }
        }

        @Override
        public void setSelectedItem(Object anItem) {
            if (anItem instanceof String) {
                project.setMainbinary((String)anItem);
            }
        }

        @Override
        public Object getSelectedItem() {
            return project.getMainbinary();
        }

        @Override
        public int getSize() {
            return objects.size();
        }

        @Override
        public String getElementAt(int index) {
            return objects.get(index);
        }

        @Override
        public void addListDataListener(ListDataListener l) {
        }

        @Override
        public void removeListDataListener(ListDataListener l) {
        }
    }
    private SublageProject project;

    public PanelRunProperties(SublageProject project) {
        this.project = project;
        initComponents();
        if (project.getStackdump() == null) {
            jcomboStackDump.setSelectedIndex(0);
        } else if (project.getStackdump().equals("stdout")) {
            jcomboStackDump.setSelectedIndex(1);
        } else if (project.getStackdump().equals("stack.txt")) {
            jcomboStackDump.setSelectedIndex(2);
        } else if (project.getStackdump().equals("socket")) {
            jcomboStackDump.setSelectedIndex(3);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jcomboSources = new javax.swing.JComboBox();
        jLabel2 = new javax.swing.JLabel();
        jcomboStackDump = new javax.swing.JComboBox();

        org.openide.awt.Mnemonics.setLocalizedText(jLabel1, org.openide.util.NbBundle.getMessage(PanelRunProperties.class, "PanelRunProperties.jLabel1.text")); // NOI18N

        jcomboSources.setModel(new ComboSourcesModel(project));

        org.openide.awt.Mnemonics.setLocalizedText(jLabel2, org.openide.util.NbBundle.getMessage(PanelRunProperties.class, "PanelRunProperties.jLabel2.text")); // NOI18N

        jcomboStackDump.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "No stack dump", "Standard output", "`stack.txt` file", "TCP Socket on port 1876" }));
        jcomboStackDump.setName(""); // NOI18N
        jcomboStackDump.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jcomboStackDumpActionPerformed(evt);
            }
        });

        org.jdesktop.layout.GroupLayout layout = new org.jdesktop.layout.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(layout.createSequentialGroup()
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(layout.createSequentialGroup()
                        .add(jLabel1)
                        .add(15, 15, 15))
                    .add(org.jdesktop.layout.GroupLayout.TRAILING, layout.createSequentialGroup()
                        .add(jLabel2)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.UNRELATED)))
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(jcomboSources, 0, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .add(jcomboStackDump, 0, 418, Short.MAX_VALUE))
                .add(12, 12, 12))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(layout.createSequentialGroup()
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(jLabel1)
                    .add(jcomboSources, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(jLabel2)
                    .add(jcomboStackDump, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(240, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void jcomboStackDumpActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jcomboStackDumpActionPerformed
        switch (jcomboStackDump.getSelectedIndex()) {
            case 0: // no stack dump
                project.setStackdump(null);
                break;
            case 1: // stdout
                project.setStackdump("stdout");
                break;
            case 2: // stack.txt
                project.setStackdump("stack.txt");
                break;
            case 3: // socket
                project.setStackdump("socket");
                break;
        }
    }//GEN-LAST:event_jcomboStackDumpActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JComboBox jcomboSources;
    private javax.swing.JComboBox jcomboStackDump;
    // End of variables declaration//GEN-END:variables
}
